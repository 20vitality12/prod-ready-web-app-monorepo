name: _Reusable cdk deploy workflow

on:
  workflow_call:
    inputs:
      stage:
        required: true
        type: string
      deploy:
        type: string
      destroy:
        type: string
env:
  STAGE: ${{ inputs.stage }}
  DOMAIN: monolith-it.click
  SERVER_SUBDOMAIN: server
  CLIENT_SUBDOMAIN: client
  HOSTED_ZONE_ID: ${{ secrets.HOSTED_ZONE_ID  }}
  COMPANY_NAME: monolith-it
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
  AWS_REGION: ${{ secrets.AWS_REGION }}
  # Remove after first successful deployment
  INITIAL_PROVISION: true

jobs:
  aws_cdk:
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.12.1

      - name: Cache Node Modules
        id: cache-node-modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('package-lock.json') }}

      - name: Install Dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm ci

      - name: Add dist to ignore
        run: echo dist/ >> .dockerignore

      - name: deploy infra
        if : ${{ inputs.DEPLOY }}
        run: npx nx run server-iac:deploy

      - name: destroy infra
        if: ${{ inputs.DESTROY }}
        run: npx nx run server-iac:destroy
